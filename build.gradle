buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath group: 'com.stanfy.android', name: 'gradle-plugin-java-robolectric', version : '2.0'
    classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.2'
    classpath 'com.android.tools.build:gradle:0.3'
  }
}

def getPackageName = { "com.stanfy.enroscar.${it.name.replaceAll(/\W/, '').replaceAll(/enroscar/, '')}" }
def projectVersion = "0.9-SNAPSHOT"

def androidLibs = ['enroscar-sdk-dep', 'enroscar-ui']

def androidMavenDep = [
  group : 'com.google.android', name : 'android', version : '4.1.1.4'
]

task wrapper(type: Wrapper) {
  gradleVersion = '1.4'
}

// Java Projects

configure(subprojects.findAll() { !(it.name in androidLibs) }) {
  
  apply plugin : 'java-robolectric'
  apply plugin : 'nexus'
  
  sourceCompatibility = 1.6

  javarob {
    packageName = getPackageName(project)
  }
  
  dependencies {
    compile androidMavenDep
    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
    testCompile group: 'org.robolectric', name: 'robolectric', version: '2.0-alpha-2'
  }

  test {
    scanForTestClasses = false
    include "**/*Test.class"
    exclude "**/Abstract*.class"
  }
  
  task testsJar(type : Jar) {
    classifier = 'tests'
    from sourceSets.test.output
  }
  
  configurations {
    testArchives {
      extendsFrom testRuntime
    }
  }
  
  artifacts {
    testArchives testsJar
  }
  
  modifyPom {
    project {
      name 'Enroscar'
      description 'Android Library'
      url 'https://github.com/stanfy/gson-xml'
      inceptionYear '2012'
  
      scm {
        url 'https://github.com/stanfy/enroscar'
        connection 'scm:git:git@github.com:stanfy/enroscar.git'
        developerConnection 'scm:git:git@github.com:stanfy/enroscar.git'
      }
  
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'repo'
        }
      }
  
    }
  }

}

// Android Projects

configure(subprojects.findAll() { it.name in androidLibs }) {
  
  apply plugin : 'android-library'

  android {
    compileSdkVersion 17
    
    defaultConfig {
      versionCode 9
      versionName projectVersion
      minSdkVersion 8
      targetSdkVersion 17
      packageName getPackageName(project)
    }
  }

  configurations {
    jarPackage { /* jar package for references from other Java projects */ }
    ideHack { /* IDE integration hack */ }
  }
  
  task classesJar(type : Copy, dependsOn : 'packageReleaseJar') {
    from 'build/bundles/release/classes.jar'
    into "build/libs"
    rename { "${project.name}-unspecified.jar" }
  }
  
  artifacts {
    jarPackage(file("build/libs/${project.name}-unspecified.jar")) {
      builtBy classesJar
    }
  }

  assemble.dependsOn classesJar

  dependencies {
    ideHack androidMavenDep
  }
    
}

// ==================================== COMMON ====================================

def checkstyleDir = new File(rootDir, 'config/checkstyle')
def checkstyleConfig = new File(checkstyleDir, 'checkstyle.xml')
  
subprojects {

  apply plugin : 'checkstyle'
  apply plugin : 'eclipse'
  apply plugin : 'maven'
  
  version = projectVersion
  group = 'com.stanfy.enroscar'
  
  checkstyle {
    configFile = checkstyleConfig
    configProperties['basedir'] = project.projectDir
  }
  
  repositories {
    mavenCentral()
  }
  
  if (project.name in androidLibs) {
    eclipse {
      classpath.plusConfigurations += configurations.ideHack
    }
  }
  
}
